{
  "contractName": "PawnFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "space",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "length",
          "type": "uint256"
        }
      ],
      "name": "SpaceCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allSpaces",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getSpace",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allSpacesLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "createSpace",
      "outputs": [
        {
          "internalType": "address",
          "name": "space",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.5+commit.eb77ed08\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"SpaceCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allSpaces\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allSpacesLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"createSpace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"space\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getSpace\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/tomohiro/Documents/Projects/cre8/PawnSpace-SmartContract-MarketMake/contracts/PawnFactory.sol\":\"PawnFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/tomohiro/Documents/Projects/cre8/PawnSpace-SmartContract-MarketMake/contracts/PawnFactory.sol\":{\"keccak256\":\"0x49666dcb6909aaf42f5487c6bfa371618818175d9f0963d4c50fb700ab540a9f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e2275554d40306d7680b71ffcdf96519cab586b70842fec361ac4eecfcb97595\",\"dweb:/ipfs/QmRTHVZyXMmj73ehwN7XEhQHMwsV2jtnC7rjXHF9igpDH3\"]},\"/Users/tomohiro/Documents/Projects/cre8/PawnSpace-SmartContract-MarketMake/contracts/PawnSpace.sol\":{\"keccak256\":\"0x46f4dc6410a269b8c222b0094c65ff6eb2339c006f52c43ac6d4076adbc71ee6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://44a28356da6aa722495ffc572f0546d70af97211014e8baa352cc8f770891b9b\",\"dweb:/ipfs/QmVs53qcr24zh3Z5S5BNDPBWyXQChze7WC8G69Sb29DXg8\"]},\"/Users/tomohiro/Documents/Projects/cre8/PawnSpace-SmartContract-MarketMake/contracts/interfaces/IPawnFactory.sol\":{\"keccak256\":\"0xb35777cb3344b6cdb11efb6342067d56678f89cdffbcfc09c5899ad5aae0b0b9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccc4acb88739958543c12fc6947aa9fae9e4fdd4ea218c67f1ecd3abbe84e090\",\"dweb:/ipfs/QmXbfuHzUFKY9s2KswbLwaqbHdMRLEp8A7xp4tFE2PFAtA\"]},\"/Users/tomohiro/Documents/Projects/cre8/PawnSpace-SmartContract-MarketMake/contracts/interfaces/IPawnSpace.sol\":{\"keccak256\":\"0xe3bec34ba92ca1a928c18691ee35b575200ccd6ec18801cc70be12a1867a40b5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a877c51abe6cd5281615d2aaad09355b9a525156414b68529abe335191005ad5\",\"dweb:/ipfs/QmVcvzRcpV9CBuhjNi637sPutVLXAszegHbLuHSYVBp4BD\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xd6b90e604fb2eb2d641c7110c72440bf2dc999ec6ab8ff60f200e71ca75d1d90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b92d8ab83b21ff984b1f0d6d66897d5afb1f2052004cbcb133cea023e0ae468\",\"dweb:/ipfs/QmTarypkQrFp4UMjTh7Zzhz2nZLz5uPS4nJQtHDEuwBVe6\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5a3de7f7f76e47a071195cf42e2a702265694a6b32037de709463bd8ad784fb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://678cbad1f972a4d8c9d47bc39fa6d39560b4fc143c8d9c812a63fe99bb13062e\",\"dweb:/ipfs/QmUhLDvUndcbQLakDNg9G4UXz8UPzRqC6S3rWGKupB6DYs\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5a9f5c29bd7cf0b345e14d97d5f685f68c07e1e5bfdd47e5bcec045e81b0b6ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://321cbaa1412fc8d013d8ad3fb5f98c0db7401ddacfb09b70828ea2cebe37397e\",\"dweb:/ipfs/Qmd3Hoc71w6rmxAR6A5VKW9at677VP1L5KDcJnyvu4ksu3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"@openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xf6bdf22fe038e5310b6f0372ecd01f221e2c0b248b45efc404542d94fcac9133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e798f3492180627d6616fa94925b61a9f105347eed9e895f3e18a0eb3dfcd3d\",\"dweb:/ipfs/QmQcTro5nv3Lopf4c4rEe1BuykCfPsjRsJmysdNXtHNUdt\"]},\"@openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x16b5422892fbdd9648f12e59de85b42efd57d76b6d6b2358cb46e0f6d4a71aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef38821a4ee756757dc1ce9074ef6096d1b5c760627e92c0852d788dc636ea7\",\"dweb:/ipfs/QmdGwP6BtRMcp4VVJUWwTmXEjYmL52A8WZpBdFJYmzc9pJ\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c806389cecd311161005b57806389cecd31146100f0578063a2e74af614610116578063a8cb47131461013e578063f46901ed1461016457610088565b8063017e7e581461008d578063094b7415146100b157806349c97251146100b9578063872b8580146100d3575b600080fd5b61009561018a565b604080516001600160a01b039092168252519081900360200190f35b610095610199565b6100c16101a8565b60408051918252519081900360200190f35b610095600480360360208110156100e957600080fd5b50356101ae565b6100956004803603602081101561010657600080fd5b50356001600160a01b03166101d8565b61013c6004803603602081101561012c57600080fd5b50356001600160a01b0316610420565b005b6100956004803603602081101561015457600080fd5b50356001600160a01b031661049a565b61013c6004803603602081101561017a57600080fd5b50356001600160a01b03166104b5565b6000546001600160a01b031681565b6001546001600160a01b031681565b60035490565b600381815481106101be57600080fd5b6000918252602090912001546001600160a01b0316905081565b60006001600160a01b038216610235576040805162461bcd60e51b815260206004820152601960248201527f5061776e466163746f72793a205a45524f5f4144445245535300000000000000604482015290519081900360640190fd5b6001600160a01b0382811660009081526002602052604090205416156102a2576040805162461bcd60e51b815260206004820152601960248201527f5061776e466163746f72793a2053504143455f45584953545300000000000000604482015290519081900360640190fd5b6060604051806020016102b49061052f565b6020820181038252601f19601f82011660405250905060008360405160200180826001600160a01b031660601b8152601401915050604051602081830303815290604052805190602001209050808251602084016000f59250826001600160a01b031663c4d66de8856040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050600060405180830381600087803b15801561035c57600080fd5b505af1158015610370573d6000803e3d6000fd5b5050506001600160a01b0380861660008181526002602090815260408083208054958a166001600160a01b0319968716811790915560038054600181018255948190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90940180549096168117909555915482519485529084015280519193507f9d92b1372c0fff8e3ee90bd3de318492ab9f2fa5925f75cfa292e7a2b55515e1928290030190a25050919050565b6001546001600160a01b03163314610478576040805162461bcd60e51b81526020600482015260166024820152752830bbb72330b1ba37b93c9d102327a92124a22222a760511b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6002602052600090815260409020546001600160a01b031681565b6001546001600160a01b0316331461050d576040805162461bcd60e51b81526020600482015260166024820152752830bbb72330b1ba37b93c9d102327a92124a22222a760511b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6132a28061053d8339019056fe608060405260016011553480156200001657600080fd5b5060408051808201825260098152685061776e537061636560b81b60208083019190915282518084019093526003835262282ba760e91b9083015290620000646301ffc9a760e01b620000e0565b81516200007990600690602085019062000165565b5080516200008f90600790602084019062000165565b50620000a26380ac58cd60e01b620000e0565b620000b4635b5e139f60e01b620000e0565b620000c663780e9d6360e01b620000e0565b5050600a80546001600160a01b0319163317905562000211565b6001600160e01b0319808216141562000140576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200019d5760008555620001e8565b82601f10620001b857805160ff1916838001178555620001e8565b82800160010185558215620001e8579182015b82811115620001e8578251825591602001919060010190620001cb565b50620001f6929150620001fa565b5090565b5b80821115620001f65760008155600101620001fb565b61308180620002216000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636c0360eb1161010f578063b88d4fde116100a2578063c87b56dd11610071578063c87b56dd1461075a578063d06fcba814610777578063d09ef2411461077f578063e985e9c514610823576101f0565b8063b88d4fde1461065e578063ba9a7a5614610724578063c45a01551461072c578063c4d66de814610734576101f0565b806395d89b41116100de57806395d89b41146105c3578063a22cb465146105cb578063a846c2fd146105f9578063a85c38ef14610616576101f0565b80636c0360eb1461055b57806370a0823114610563578063761610fc146105895780638a72ea6a146105a6576101f0565b80632e1a7d4d1161018757806342842e0e1161015657806342842e0e146104a05780634579268a146104d65780634f6ccce7146105215780636352211e1461053e576101f0565b80632e1a7d4d146103f75780632e2dc43e146104145780632f745c591461046c578063407384e914610498576101f0565b806313789680116101c3578063137896801461031457806318160ddd1461039c57806322f37ae0146103a457806323b872dd146103c1576101f0565b806301ffc9a7146101f557806306fdde0314610230578063081812fc146102ad578063095ea7b3146102e6575b600080fd5b61021c6004803603602081101561020b57600080fd5b50356001600160e01b031916610851565b604080519115158252519081900360200190f35b610238610874565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027257818101518382015260200161025a565b50505050905090810190601f16801561029f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102ca600480360360208110156102c357600080fd5b503561090a565b604080516001600160a01b039092168252519081900360200190f35b610312600480360360408110156102fc57600080fd5b506001600160a01b03813516906020013561096c565b005b61038a6004803603606081101561032a57600080fd5b81019060208101813564010000000081111561034557600080fd5b82018360208201111561035757600080fd5b8035906020019184602083028401116401000000008311171561037957600080fd5b919350915080359060200135610a47565b60408051918252519081900360200190f35b61038a610ca8565b610312600480360360208110156103ba57600080fd5b5035610cb9565b610312600480360360608110156103d757600080fd5b506001600160a01b03813581169160208101359091169060400135610ee4565b6103126004803603602081101561040d57600080fd5b5035610f3b565b61041c6111e3565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610458578181015183820152602001610440565b505050509050019250505060405180910390f35b61038a6004803603604081101561048257600080fd5b506001600160a01b0381351690602001356112c4565b61041c6112ef565b610312600480360360608110156104b657600080fd5b506001600160a01b0381358116916020810135909116906040013561148d565b6104f3600480360360208110156104ec57600080fd5b50356114a8565b604080519485526001600160a01b039093166020850152838301919091526060830152519081900360800190f35b61038a6004803603602081101561053757600080fd5b5035611547565b6102ca6004803603602081101561055457600080fd5b503561155d565b610238611585565b61038a6004803603602081101561057957600080fd5b50356001600160a01b03166115e6565b61038a6004803603602081101561059f57600080fd5b503561164e565b6104f3600480360360208110156105bc57600080fd5b5035611654565b610238611685565b610312600480360360408110156105e157600080fd5b506001600160a01b03813516906020013515156116e6565b6103126004803603602081101561060f57600080fd5b50356117eb565b6106336004803603602081101561062c57600080fd5b5035611a89565b6040805195865260208601949094528484019290925260608401526080830152519081900360a00190f35b6103126004803603608081101561067457600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156106af57600080fd5b8201836020820111156106c157600080fd5b803590602001918460018302840111640100000000831117156106e357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611abb945050505050565b61038a611b19565b6102ca611b1f565b6103126004803603602081101561074a57600080fd5b50356001600160a01b0316611b2e565b6102386004803603602081101561077057600080fd5b5035611ba6565b6102ca611e4d565b61079c6004803603602081101561079557600080fd5b5035611e5c565b6040518080602001886001600160a01b03168152602001878152602001868152602001858152602001848152602001838152602001828103825289818151815260200191508051906020019060200280838360005b838110156108095781810151838201526020016107f1565b505050509050019850505050505050505060405180910390f35b61021c6004803603604081101561083957600080fd5b506001600160a01b0381358116916020013516611f62565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109005780601f106108d557610100808354040283529160200191610900565b820191906000526020600020905b8154815290600101906020018083116108e357829003601f168201915b5050505050905090565b600061091582611f90565b6109505760405162461bcd60e51b815260040180806020018281038252602c815260200180612f76602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006109778261155d565b9050806001600160a01b0316836001600160a01b031614156109ca5760405162461bcd60e51b8152600401808060200182810382526021815260200180612ffa6021913960400191505060405180910390fd5b806001600160a01b03166109dc611f9d565b6001600160a01b031614806109fd57506109fd816109f8611f9d565b611f62565b610a385760405162461bcd60e51b8152600401808060200182810382526038815260200180612ec96038913960400191505060405180910390fd5b610a428383611fa1565b505050565b600083610a8f576040805162461bcd60e51b815260206004820152601160248201527014185ddb94dc1858d94e881393d7d39195607a1b604482015290519081900360640190fd5b60005b84811015610b3a57600b546001600160a01b03166323b872dd3330898986818110610ab957fe5b905060200201356040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b158015610b1657600080fd5b505af1158015610b2a573d6000803e3d6000fd5b505060019092019150610a929050565b506040518060c001604052808686808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552505050602080830186905260408084018890524260608501526080840183905260a0909301829052600c548252600e8152919020825180519192610bc192849290910190612d4b565b506020820151816001015560408201518160020155606082015181600301556080820151816004015560a08201518160050155905050610c0333600c5461200f565b600c549050336001600160a01b03167f07aa6d5d81a739a9fd89bd7a2ca70ba72fc8b94acff7cf84aafcc799cb8e7596600c548787878760405180868152602001806020018481526020018381526020018281038252868682818152602001925060200280828437600083820152604051601f909101601f19169092018290039850909650505050505050a2600c54610c9d90600161213d565b600c55949350505050565b6000610cb46002612197565b905090565b610cc281611f90565b610d0f576040805162461bcd60e51b81526020600482015260196024820152782830bbb729b830b1b29d102727a722ac24a9aa2fa7a92222a960391b604482015290519081900360640190fd5b33610d198261155d565b6001600160a01b031614610d6b576040805162461bcd60e51b81526020600482015260146024820152732830bbb729b830b1b29d102727aa2fa7aba722a960611b604482015290519081900360640190fd5b6000818152600e602052604090206004015415610dcf576040805162461bcd60e51b815260206004820152601b60248201527f5061776e53706163653a20414c52454144595f41434345505445440000000000604482015290519081900360640190fd5b60005b6000828152600e6020526040902054811015610ea157600b546000838152600e6020526040902080546001600160a01b03909216916323b872dd91309133919086908110610e1c57fe5b90600052602060002001546040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b158015610e7d57600080fd5b505af1158015610e91573d6000803e3d6000fd5b505060019092019150610dd29050565b50610eab816121a2565b60408051828152905133917f9b09baf720c60ad3e68b28ec995e1a86b0dcd3ab5fcd9a2613e0e3d4f6d67d69919081900360200190a250565b610ef5610eef611f9d565b8261226f565b610f305760405162461bcd60e51b815260040180806020018281038252603181526020018061301b6031913960400191505060405180910390fd5b610a42838383612313565b610f4481611f90565b610f91576040805162461bcd60e51b81526020600482015260196024820152782830bbb729b830b1b29d102727a722ac24a9aa2fa7a92222a960391b604482015290519081900360640190fd5b6000818152600e6020526040902060040154610fee576040805162461bcd60e51b815260206004820152601760248201527614185ddb94dc1858d94e881393d517d050d0d154151151604a1b604482015290519081900360640190fd5b6000818152600e6020526040902060018101546004909101544291611013919061213d565b1061105e576040805162461bcd60e51b815260206004820152601660248201527514185ddb94dc1858d94e881393d517d156141254915160521b604482015290519081900360640190fd5b6000818152600e6020908152604080832060050154808452600f909252909120600101546001600160a01b031633146110d6576040805162461bcd60e51b81526020600482015260156024820152742830bbb729b830b1b29d102727aa2fa622a72222a960591b604482015290519081900360640190fd5b60005b6000838152600e60205260409020548110156111a857600b546000848152600e6020526040902080546001600160a01b03909216916323b872dd9130913391908690811061112357fe5b90600052602060002001546040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b15801561118457600080fd5b505af1158015611198573d6000803e3d6000fd5b5050600190920191506110d99050565b5060408051838152905133917f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364919081900360200190a25050565b606060006111ef610ca8565b11611241576040805162461bcd60e51b815260206004820152601a60248201527f5061776e53706163653a204e4f4e45584953545f4f5244455253000000000000604482015290519081900360640190fd5b611249610ca8565b67ffffffffffffffff8111801561125f57600080fd5b50604051908082528060200260200182016040528015611289578160200160208202803683370190505b50905060005b81518110156112c0576112a181611547565b8282815181106112ad57fe5b602090810291909101015260010161128f565b5090565b6001600160a01b03821660009081526001602052604081206112e6908361245f565b90505b92915050565b606060006112fb610ca8565b1161134d576040805162461bcd60e51b815260206004820152601a60248201527f5061776e53706163653a204e4f4e45584953545f4f5244455253000000000000604482015290519081900360640190fd5b611355610ca8565b67ffffffffffffffff8111801561136b57600080fd5b50604051908082528060200260200182016040528015611395578160200160208202803683370190505b50905060005b6113a3610ca8565b8110156112c05760006113b582611547565b90506113bf612d92565b6000828152600e60209081526040918290208251815460e09381028201840190945260c08101848152909391928492849184018282801561141f57602002820191906000526020600020905b81548152602001906001019080831161140b575b50505050508152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815250509050806080015160001415611483578184848151811061147657fe5b6020026020010181815250505b505060010161139b565b610a4283838360405180602001604052806000815250611abb565b6000818152600f6020526040812060030154819081908190611511576040805162461bcd60e51b815260206004820152601960248201527f5061776e53706163653a204e4f4e45584953545f4f4646455200000000000000604482015290519081900360640190fd5b505050600091825250600f6020526040902080546001820154600283015460039093015491936001600160a01b03909116929190565b60008061155560028461246b565b509392505050565b60006112e982604051806060016040528060298152602001612f2b6029913960029190612487565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109005780601f106108d557610100808354040283529160200191610900565b60006001600160a01b03821661162d5760405162461bcd60e51b815260040180806020018281038252602a815260200180612f01602a913960400191505060405180910390fd5b6001600160a01b03821660009081526001602052604090206112e990612197565b50600090565b600f60205260009081526040902080546001820154600283015460039093015491926001600160a01b039091169184565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156109005780601f106108d557610100808354040283529160200191610900565b6116ee611f9d565b6001600160a01b0316826001600160a01b03161415611754576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000611761611f9d565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556117a5611f9d565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6117f481611f90565b611841576040805162461bcd60e51b81526020600482015260196024820152782830bbb729b830b1b29d102727a722ac24a9aa2fa7a92222a960391b604482015290519081900360640190fd5b3361184b8261155d565b6001600160a01b03161461189d576040805162461bcd60e51b81526020600482015260146024820152732830bbb729b830b1b29d102727aa2fa7aba722a960611b604482015290519081900360640190fd5b6000818152600e60205260409020600401546118fa576040805162461bcd60e51b815260206004820152601760248201527614185ddb94dc1858d94e881393d517d050d0d154151151604a1b604482015290519081900360640190fd5b6000818152600e602052604090206001810154600490910154429161191f919061213d565b1015611967576040805162461bcd60e51b815260206004820152601260248201527114185ddb94dc1858d94e881156141254915160721b604482015290519081900360640190fd5b6000818152600e6020526040812060050154905b6000838152600e6020526040902054811015611a4a57600b546000848152600e6020526040902080546001600160a01b03909216916323b872dd913091339190869081106119c557fe5b90600052602060002001546040518463ffffffff1660e01b815260040180846001600160a01b03168152602001836001600160a01b031681526020018281526020019350505050600060405180830381600087803b158015611a2657600080fd5b505af1158015611a3a573d6000803e3d6000fd5b50506001909201915061197b9050565b506040805183815260208101839052815133927fad7daa402ba35c049966c9827828cb62d41be7729ab0b5c816ef79e08c2418c9928290030190a25050565b600e60205260009081526040902060018101546002820154600383015460048401546005909401549293919290919085565b611acc611ac6611f9d565b8361226f565b611b075760405162461bcd60e51b815260040180806020018281038252603181526020018061301b6031913960400191505060405180910390fd5b611b138484848461249e565b50505050565b6103e881565b600a546001600160a01b031681565b600a546001600160a01b03163314611b84576040805162461bcd60e51b81526020600482015260146024820152732830bbb729b830b1b29d102327a92124a22222a760611b604482015290519081900360640190fd5b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6060611bb182611f90565b611bec5760405162461bcd60e51b815260040180806020018281038252602f815260200180612fcb602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015611c815780601f10611c5657610100808354040283529160200191611c81565b820191906000526020600020905b815481529060010190602001808311611c6457829003601f168201915b505060095493945050505060026000196101006001841615020190911604611caa57905061086f565b805115611d7b576009816040516020018083805460018160011615610100020316600290048015611d125780601f10611cf0576101008083540402835291820191611d12565b820191906000526020600020905b815481529060010190602001808311611cfe575b5050825160208401908083835b60208310611d3e5780518252601f199092019160209182019101611d1f565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405291505061086f565b6009611d86846124f0565b6040516020018083805460018160011615610100020316600290048015611de45780601f10611dc2576101008083540402835291820191611de4565b820191906000526020600020905b815481529060010190602001808311611dd0575b5050825160208401908083835b60208310611e105780518252601f199092019160209182019101611df1565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b600b546001600160a01b031681565b6060600080600080600080611e7088611f90565b611ebd576040805162461bcd60e51b81526020600482015260196024820152782830bbb729b830b1b29d102727a722ac24a9aa2fa7a92222a960391b604482015290519081900360640190fd5b611ec68861155d565b6000898152600e60209081526040918290208054835181840281018401909452808452939950919290830182828015611f1e57602002820191906000526020600020905b815481526020019060010190808311611f0a575b50505060009a8b525050600e602052604090982060028101546001820154600383015460048401546005909401549b9c999b929a5090989097509195509350915050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006112e96002836125cb565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611fd68261155d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b03821661206a576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61207381611f90565b156120c5576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b6120d160008383610a42565b6001600160a01b03821660009081526001602052604090206120f390826125d7565b50612100600282846125e3565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000828201838110156112e6576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b60006112e9826125f9565b60006121ad8261155d565b90506121bb81600084610a42565b6121c6600083611fa1565b600082815260086020526040902054600260001961010060018416150201909116041561220457600082815260086020526040812061220491612dc8565b6001600160a01b038116600090815260016020526040902061222690836125fd565b50612232600283612609565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600061227a82611f90565b6122b55760405162461bcd60e51b815260040180806020018281038252602c815260200180612e9d602c913960400191505060405180910390fd5b60006122c08361155d565b9050806001600160a01b0316846001600160a01b031614806122fb5750836001600160a01b03166122f08461090a565b6001600160a01b0316145b8061230b575061230b8185611f62565b949350505050565b826001600160a01b03166123268261155d565b6001600160a01b03161461236b5760405162461bcd60e51b8152600401808060200182810382526029815260200180612fa26029913960400191505060405180910390fd5b6001600160a01b0382166123b05760405162461bcd60e51b8152600401808060200182810382526024815260200180612e796024913960400191505060405180910390fd5b6123bb838383610a42565b6123c6600082611fa1565b6001600160a01b03831660009081526001602052604090206123e890826125fd565b506001600160a01b038216600090815260016020526040902061240b90826125d7565b50612418600282846125e3565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60006112e68383612615565b600080808061247a8686612679565b9097909650945050505050565b60006124948484846126f4565b90505b9392505050565b6124a9848484612313565b6124b5848484846127be565b611b135760405162461bcd60e51b8152600401808060200182810382526032815260200180612e476032913960400191505060405180910390fd5b60608161251557506040805180820190915260018152600360fc1b602082015261086f565b8160005b811561252d57600101600a82049150612519565b60608167ffffffffffffffff8111801561254657600080fd5b506040519080825280601f01601f191660200182016040528015612571576020820181803683370190505b50859350905060001982015b83156125c257600a840660300160f81b828280600190039350815181106125a057fe5b60200101906001600160f81b031916908160001a905350600a8404935061257d565b50949350505050565b60006112e68383612926565b60006112e6838361293e565b600061249484846001600160a01b038516612988565b5490565b60006112e68383612a1f565b60006112e68383612ae5565b815460009082106126575760405162461bcd60e51b8152600401808060200182810382526022815260200180612e256022913960400191505060405180910390fd5b82600001828154811061266657fe5b9060005260206000200154905092915050565b8154600090819083106126bd5760405162461bcd60e51b8152600401808060200182810382526022815260200180612f546022913960400191505060405180910390fd5b60008460000184815481106126ce57fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b6000828152600184016020526040812054828161278f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561275457818101518382015260200161273c565b50505050905090810190601f1680156127815780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b508460000160018203815481106127a257fe5b9060005260206000209060020201600101549150509392505050565b60006127d2846001600160a01b0316612bb9565b6127de5750600161230b565b60606128ec630a85bd0160e11b6127f3611f9d565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561285a578181015183820152602001612842565b50505050905090810190601f1680156128875780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001612e47603291396001600160a01b0388169190612bbf565b9050600081806020019051602081101561290557600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b60009081526001919091016020526040902054151590565b600061294a8383612926565b612980575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556112e9565b5060006112e9565b6000828152600184016020526040812054806129ed575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055612497565b82856000016001830381548110612a0057fe5b9060005260206000209060020201600101819055506000915050612497565b60008181526001830160205260408120548015612adb5783546000198083019190810190600090879083908110612a5257fe5b9060005260206000200154905080876000018481548110612a6f57fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080612a9f57fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506112e9565b60009150506112e9565b60008181526001830160205260408120548015612adb5783546000198083019190810190600090879083908110612b1857fe5b9060005260206000209060020201905080876000018481548110612b3857fe5b600091825260208083208454600290930201918255600193840154918401919091558354825289830190526040902090840190558654879080612b7757fe5b60008281526020808220600260001990940193840201828155600190810183905592909355888152898201909252604082209190915594506112e99350505050565b3b151590565b6060612494848460008585612bd385612bb9565b612c24576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b60208310612c635780518252601f199092019160209182019101612c44565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612cc5576040519150601f19603f3d011682016040523d82523d6000602084013e612cca565b606091505b5091509150612cda828286612ce5565b979650505050505050565b60608315612cf4575081612497565b825115612d045782518084602001fd5b60405162461bcd60e51b815260206004820181815284516024840152845185939192839260440191908501908083836000831561275457818101518382015260200161273c565b828054828255906000526020600020908101928215612d86579160200282015b82811115612d86578251825591602001919060010190612d6b565b506112c0929150612e0f565b6040518060c001604052806060815260200160008152602001600081526020016000815260200160008152602001600081525090565b50805460018160011615610100020316600290046000825580601f10612dee5750612e0c565b601f016020900490600052602060002090810190612e0c9190612e0f565b50565b5b808211156112c05760008155600101612e1056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220c9af6f163c1608862cc5bd8bbf85d0ff4123bd07e591c5bc751d97fba1b68aa564736f6c63430007050033a26469706673582212204898b656999e5acae2a9cf9e02cf49f51ab6a30de185bd3099b2fc9e42d9d7e064736f6c63430007050033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "139:1382:0:-:0;;;359:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;359:77:0;403:11;:26;;-1:-1:-1;;;;;;403:26:0;-1:-1:-1;;;;;403:26:0;;;;;;;;;139:1382;;;-1:-1:-1;139:1382:0;;",
  "deployedSourceMap": "139:1382:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;182:29;;;:::i;:::-;;;;-1:-1:-1;;;;;182:29:0;;;;;;;;;;;;;;217:35;;;:::i;442:108::-;;;:::i;:::-;;;;;;;;;;;;;;;;317:35;;;;;;;;;;;;;;;;-1:-1:-1;317:35:0;;:::i;556:621::-;;;;;;;;;;;;;;;;-1:-1:-1;556:621:0;-1:-1:-1;;;;;556:621:0;;:::i;1342:177::-;;;;;;;;;;;;;;;;-1:-1:-1;1342:177:0;-1:-1:-1;;;;;1342:177:0;;:::i;:::-;;259:52;;;;;;;;;;;;;;;;-1:-1:-1;259:52:0;-1:-1:-1;;;;;259:52:0;;:::i;1183:153::-;;;;;;;;;;;;;;;;-1:-1:-1;1183:153:0;-1:-1:-1;;;;;1183:153:0;;:::i;182:29::-;;;-1:-1:-1;;;;;182:29:0;;:::o;217:35::-;;;-1:-1:-1;;;;;217:35:0;;:::o;442:108::-;527:9;:16;442:108;:::o;317:35::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;317:35:0;;-1:-1:-1;317:35:0;:::o;556:621::-;619:13;-1:-1:-1;;;;;652:19:0;;644:57;;;;;-1:-1:-1;;;644:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;719:15:0;;;746:1;719:15;;;:8;:15;;;;;;;:29;711:67;;;;;-1:-1:-1;;;711:67:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;788:21;812:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;788:52;;850:12;892:5;875:23;;;;;;-1:-1:-1;;;;;875:23:0;;;;;;;;;;;;;;;;;;;;;;865:34;;;;;;850:49;;988:4;977:8;971:15;966:2;956:8;952:17;949:1;941:52;932:61;;1023:5;-1:-1:-1;;;;;1012:28:0;;1041:5;1012:35;;;;;;;;;;;;;-1:-1:-1;;;;;1012:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1057:15:0;;;;;;;:8;:15;;;;;;;;:23;;;;;-1:-1:-1;;;;;;1057:23:0;;;;;;;;1090:9;:21;;1057:23;1090:21;;;;;;;;;;;;;;;;;;;;;;1153:16;;1126:44;;;;;;;;;;;1057:15;;-1:-1:-1;1126:44:0;;;;;;;;556:621;;;;;:::o;1342:177::-;1438:11;;-1:-1:-1;;;;;1438:11:0;1424:10;:25;1416:60;;;;;-1:-1:-1;;;1416:60:0;;;;;;;;;;;;-1:-1:-1;;;1416:60:0;;;;;;;;;;;;;;;1486:11;:26;;-1:-1:-1;;;;;;1486:26:0;-1:-1:-1;;;;;1486:26:0;;;;;;;;;;1342:177::o;259:52::-;;;;;;;;;;;;-1:-1:-1;;;;;259:52:0;;:::o;1183:153::-;1267:11;;-1:-1:-1;;;;;1267:11:0;1253:10;:25;1245:60;;;;;-1:-1:-1;;;1245:60:0;;;;;;;;;;;;-1:-1:-1;;;1245:60:0;;;;;;;;;;;;;;;1315:5;:14;;-1:-1:-1;;;;;;1315:14:0;-1:-1:-1;;;;;1315:14:0;;;;;;;;;;1183:153::o;-1:-1:-1:-;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >=0.6.0 <0.8.0;\n\nimport './interfaces/IPawnFactory.sol';\nimport './PawnSpace.sol';\n\ncontract PawnFactory is IPawnFactory {\n    address public override feeTo;\n    address public override feeToSetter;\n\n    mapping(address => address) public override getSpace;\n    address[] public override allSpaces;\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function allSpacesLength() external view override returns (uint256) {\n        return allSpaces.length;\n    }\n\n    function createSpace(address token) external override returns (address space) {\n        require(token != address(0), 'PawnFactory: ZERO_ADDRESS');\n        require(getSpace[token] == address(0), 'PawnFactory: SPACE_EXISTS');\n        bytes memory bytecode = type(PawnSpace).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token));\n        assembly {\n            space := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        IPawnSpace(space).initialize(token);\n        getSpace[token] = space;\n        allSpaces.push(space);\n        emit SpaceCreated(token, space, allSpaces.length);\n    }\n\n    function setFeeTo(address _feeTo) external override {\n        require(msg.sender == feeToSetter, 'PawnFactory: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external override {\n        require(msg.sender == feeToSetter, 'PawnFactory: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n}\n",
  "sourcePath": "/Users/tomohiro/Documents/Projects/cre8/PawnSpace-SmartContract-MarketMake/contracts/PawnFactory.sol",
  "ast": {
    "absolutePath": "/Users/tomohiro/Documents/Projects/cre8/PawnSpace-SmartContract-MarketMake/contracts/PawnFactory.sol",
    "exportedSymbols": {
      "Address": [
        3831
      ],
      "Context": [
        1618
      ],
      "ERC165": [
        1675
      ],
      "ERC721": [
        3395
      ],
      "EnumerableMap": [
        4336
      ],
      "EnumerableSet": [
        4816
      ],
      "IERC165": [
        1687
      ],
      "IERC20": [
        2464
      ],
      "IERC721": [
        3511
      ],
      "IERC721Enumerable": [
        3542
      ],
      "IERC721Metadata": [
        3569
      ],
      "IERC721Receiver": [
        3587
      ],
      "IPawnFactory": [
        1004
      ],
      "IPawnSpace": [
        1144
      ],
      "PawnFactory": [
        153
      ],
      "PawnSpace": [
        947
      ],
      "SafeMath": [
        1883
      ],
      "Strings": [
        4903
      ]
    },
    "id": 154,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:31:0"
      },
      {
        "absolutePath": "/Users/tomohiro/Documents/Projects/cre8/PawnSpace-SmartContract-MarketMake/contracts/interfaces/IPawnFactory.sol",
        "file": "./interfaces/IPawnFactory.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 154,
        "sourceUnit": 1005,
        "src": "72:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tomohiro/Documents/Projects/cre8/PawnSpace-SmartContract-MarketMake/contracts/PawnSpace.sol",
        "file": "./PawnSpace.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 154,
        "sourceUnit": 948,
        "src": "112:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "IPawnFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1004,
              "src": "163:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPawnFactory_$1004",
                "typeString": "contract IPawnFactory"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "163:12:0"
          }
        ],
        "contractDependencies": [
          947,
          1004
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 153,
        "linearizedBaseContracts": [
          153,
          1004
        ],
        "name": "PawnFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              962
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 8,
            "mutability": "mutable",
            "name": "feeTo",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "197:8:0"
            },
            "scope": 153,
            "src": "182:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "182:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              967
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 11,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 10,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "232:8:0"
            },
            "scope": 153,
            "src": "217:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "217:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              974
            ],
            "constant": false,
            "functionSelector": "a8cb4713",
            "id": 16,
            "mutability": "mutable",
            "name": "getSpace",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 15,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "294:8:0"
            },
            "scope": 153,
            "src": "259:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "267:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "259:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "278:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              981
            ],
            "constant": false,
            "functionSelector": "872b8580",
            "id": 20,
            "mutability": "mutable",
            "name": "allSpaces",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 19,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "334:8:0"
            },
            "scope": 153,
            "src": "317:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "317:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 18,
              "nodeType": "ArrayTypeName",
              "src": "317:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "393:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "403:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "417:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "403:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "403:26:0"
                }
              ]
            },
            "id": 30,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "371:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "370:22:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:0:0"
            },
            "scope": 153,
            "src": "359:77:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              986
            ],
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "510:40:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 36,
                      "name": "allSpaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "527:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "527:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35,
                  "id": 38,
                  "nodeType": "Return",
                  "src": "520:23:0"
                }
              ]
            },
            "functionSelector": "49c97251",
            "id": 40,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allSpacesLength",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 32,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "483:8:0"
            },
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "501:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "500:9:0"
            },
            "scope": 153,
            "src": "442:108:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              993
            ],
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "634:543:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "652:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 52,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "669:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 51,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "661:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "661:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "661:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "652:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a205a45524f5f41444452455353",
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "673:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_232afbf06f4c0b921364e6d6dc201e84eda1596d2146af36ab14bebb071dbe99",
                          "typeString": "literal_string \"PawnFactory: ZERO_ADDRESS\""
                        },
                        "value": "PawnFactory: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_232afbf06f4c0b921364e6d6dc201e84eda1596d2146af36ab14bebb071dbe99",
                          "typeString": "literal_string \"PawnFactory: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "644:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "644:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 59,
                            "name": "getSpace",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "719:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 61,
                          "indexExpression": {
                            "id": 60,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "728:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "719:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 64,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "746:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "738:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 62,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "738:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "738:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "719:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a2053504143455f455849535453",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "750:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eab4641c3a0e1936446ac9c0bc5230b35d53e131cef993bb4b8a2f25afbc872b",
                          "typeString": "literal_string \"PawnFactory: SPACE_EXISTS\""
                        },
                        "value": "PawnFactory: SPACE_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eab4641c3a0e1936446ac9c0bc5230b35d53e131cef993bb4b8a2f25afbc872b",
                          "typeString": "literal_string \"PawnFactory: SPACE_EXISTS\""
                        }
                      ],
                      "id": 58,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "711:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "711:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "711:67:0"
                },
                {
                  "assignments": [
                    71
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nodeType": "VariableDeclaration",
                      "scope": 113,
                      "src": "788:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 70,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "788:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 73,
                          "name": "PawnSpace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 947,
                          "src": "817:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PawnSpace_$947_$",
                            "typeString": "type(contract PawnSpace)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PawnSpace_$947_$",
                            "typeString": "type(contract PawnSpace)"
                          }
                        ],
                        "id": 72,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "812:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "812:15:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PawnSpace_$947",
                        "typeString": "type(contract PawnSpace)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "812:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "788:52:0"
                },
                {
                  "assignments": [
                    78
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78,
                      "mutability": "mutable",
                      "name": "salt",
                      "nodeType": "VariableDeclaration",
                      "scope": 113,
                      "src": "850:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 77,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "850:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "892:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "875:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "875:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "875:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 79,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "865:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "850:49:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "918:85:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "932:61:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "949:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "956:8:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "966:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "952:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "952:17:0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "977:8:0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "971:5:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "971:15:0"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "988:4:0"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "941:7:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "941:52:0"
                        },
                        "variableNames": [
                          {
                            "name": "space",
                            "nodeType": "YulIdentifier",
                            "src": "932:5:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 71,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "956:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 71,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "977:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 78,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "988:4:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 46,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "932:5:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 86,
                  "nodeType": "InlineAssembly",
                  "src": "909:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1041:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 88,
                            "name": "space",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "1023:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87,
                          "name": "IPawnSpace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "1012:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPawnSpace_$1144_$",
                            "typeString": "type(contract IPawnSpace)"
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1012:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPawnSpace_$1144",
                          "typeString": "contract IPawnSpace"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1100,
                      "src": "1012:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1012:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1012:35:0"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 94,
                        "name": "getSpace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1057:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 96,
                      "indexExpression": {
                        "id": 95,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1066:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1057:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97,
                      "name": "space",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1075:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1057:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:23:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 103,
                        "name": "space",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1105:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 100,
                        "name": "allSpaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1090:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1090:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 107,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1139:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 108,
                        "name": "space",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1146:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 109,
                          "name": "allSpaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "1153:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1153:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 106,
                      "name": "SpaceCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 957,
                      "src": "1126:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "EmitStatement",
                  "src": "1121:49:0"
                }
              ]
            },
            "functionSelector": "89cecd31",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createSpace",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 44,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "601:8:0"
            },
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "577:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "576:15:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "space",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "619:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "618:15:0"
            },
            "scope": 153,
            "src": "556:621:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              998
            ],
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1235:101:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 121,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1253:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1253:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 123,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1267:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1253:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a20464f5242494444454e",
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1280:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        },
                        "value": "PawnFactory: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        }
                      ],
                      "id": 120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1245:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1245:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1245:60:0"
                },
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 128,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1315:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 129,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1323:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1315:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:14:0"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 118,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1226:8:0"
            },
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "1201:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1200:16:0"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1235:0:0"
            },
            "scope": 153,
            "src": "1183:153:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1003
            ],
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "1406:113:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 140,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1424:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1424:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 142,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1438:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1424:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a20464f5242494444454e",
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1451:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        },
                        "value": "PawnFactory: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1416:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:60:0"
                },
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 147,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1486:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 148,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "1500:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1486:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:26:0"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 137,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1397:8:0"
            },
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1366:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1365:22:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:0"
            },
            "scope": 153,
            "src": "1342:177:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 154,
        "src": "139:1382:0"
      }
    ],
    "src": "39:1483:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/tomohiro/Documents/Projects/cre8/PawnSpace-SmartContract-MarketMake/contracts/PawnFactory.sol",
    "exportedSymbols": {
      "Address": [
        3831
      ],
      "Context": [
        1618
      ],
      "ERC165": [
        1675
      ],
      "ERC721": [
        3395
      ],
      "EnumerableMap": [
        4336
      ],
      "EnumerableSet": [
        4816
      ],
      "IERC165": [
        1687
      ],
      "IERC20": [
        2464
      ],
      "IERC721": [
        3511
      ],
      "IERC721Enumerable": [
        3542
      ],
      "IERC721Metadata": [
        3569
      ],
      "IERC721Receiver": [
        3587
      ],
      "IPawnFactory": [
        1004
      ],
      "IPawnSpace": [
        1144
      ],
      "PawnFactory": [
        153
      ],
      "PawnSpace": [
        947
      ],
      "SafeMath": [
        1883
      ],
      "Strings": [
        4903
      ]
    },
    "id": 154,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:31:0"
      },
      {
        "absolutePath": "/Users/tomohiro/Documents/Projects/cre8/PawnSpace-SmartContract-MarketMake/contracts/interfaces/IPawnFactory.sol",
        "file": "./interfaces/IPawnFactory.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 154,
        "sourceUnit": 1005,
        "src": "72:39:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/tomohiro/Documents/Projects/cre8/PawnSpace-SmartContract-MarketMake/contracts/PawnSpace.sol",
        "file": "./PawnSpace.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 154,
        "sourceUnit": 948,
        "src": "112:25:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "IPawnFactory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1004,
              "src": "163:12:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IPawnFactory_$1004",
                "typeString": "contract IPawnFactory"
              }
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "163:12:0"
          }
        ],
        "contractDependencies": [
          947,
          1004
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 153,
        "linearizedBaseContracts": [
          153,
          1004
        ],
        "name": "PawnFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              962
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 8,
            "mutability": "mutable",
            "name": "feeTo",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 7,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "197:8:0"
            },
            "scope": 153,
            "src": "182:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "182:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              967
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 11,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 10,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "232:8:0"
            },
            "scope": 153,
            "src": "217:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "217:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              974
            ],
            "constant": false,
            "functionSelector": "a8cb4713",
            "id": 16,
            "mutability": "mutable",
            "name": "getSpace",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 15,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "294:8:0"
            },
            "scope": 153,
            "src": "259:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "267:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "259:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "278:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              981
            ],
            "constant": false,
            "functionSelector": "872b8580",
            "id": 20,
            "mutability": "mutable",
            "name": "allSpaces",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 19,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "334:8:0"
            },
            "scope": 153,
            "src": "317:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "317:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 18,
              "nodeType": "ArrayTypeName",
              "src": "317:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "393:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "403:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 26,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22,
                      "src": "417:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "403:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "403:26:0"
                }
              ]
            },
            "id": 30,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "371:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "370:22:0"
            },
            "returnParameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "393:0:0"
            },
            "scope": 153,
            "src": "359:77:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              986
            ],
            "body": {
              "id": 39,
              "nodeType": "Block",
              "src": "510:40:0",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 36,
                      "name": "allSpaces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "527:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "527:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 35,
                  "id": 38,
                  "nodeType": "Return",
                  "src": "520:23:0"
                }
              ]
            },
            "functionSelector": "49c97251",
            "id": 40,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allSpacesLength",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 32,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "483:8:0"
            },
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "466:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "501:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "500:9:0"
            },
            "scope": 153,
            "src": "442:108:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              993
            ],
            "body": {
              "id": 113,
              "nodeType": "Block",
              "src": "634:543:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 49,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "652:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 52,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "669:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 51,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "661:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "661:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "661:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "652:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a205a45524f5f41444452455353",
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "673:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_232afbf06f4c0b921364e6d6dc201e84eda1596d2146af36ab14bebb071dbe99",
                          "typeString": "literal_string \"PawnFactory: ZERO_ADDRESS\""
                        },
                        "value": "PawnFactory: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_232afbf06f4c0b921364e6d6dc201e84eda1596d2146af36ab14bebb071dbe99",
                          "typeString": "literal_string \"PawnFactory: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "644:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "644:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "644:57:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 59,
                            "name": "getSpace",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "719:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 61,
                          "indexExpression": {
                            "id": 60,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "728:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "719:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 64,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "746:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 63,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "738:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 62,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "738:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "738:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "719:29:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a2053504143455f455849535453",
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "750:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eab4641c3a0e1936446ac9c0bc5230b35d53e131cef993bb4b8a2f25afbc872b",
                          "typeString": "literal_string \"PawnFactory: SPACE_EXISTS\""
                        },
                        "value": "PawnFactory: SPACE_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eab4641c3a0e1936446ac9c0bc5230b35d53e131cef993bb4b8a2f25afbc872b",
                          "typeString": "literal_string \"PawnFactory: SPACE_EXISTS\""
                        }
                      ],
                      "id": 58,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "711:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "711:67:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69,
                  "nodeType": "ExpressionStatement",
                  "src": "711:67:0"
                },
                {
                  "assignments": [
                    71
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nodeType": "VariableDeclaration",
                      "scope": 113,
                      "src": "788:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 70,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "788:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 76,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 73,
                          "name": "PawnSpace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 947,
                          "src": "817:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_PawnSpace_$947_$",
                            "typeString": "type(contract PawnSpace)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_PawnSpace_$947_$",
                            "typeString": "type(contract PawnSpace)"
                          }
                        ],
                        "id": 72,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -27,
                        "src": "812:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "812:15:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_PawnSpace_$947",
                        "typeString": "type(contract PawnSpace)"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "812:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "788:52:0"
                },
                {
                  "assignments": [
                    78
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78,
                      "mutability": "mutable",
                      "name": "salt",
                      "nodeType": "VariableDeclaration",
                      "scope": 113,
                      "src": "850:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 77,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "850:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 85,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 82,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42,
                            "src": "892:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 80,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "875:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 81,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "875:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "875:23:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 79,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "865:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "865:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "850:49:0"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "918:85:0",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "932:61:0",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "949:1:0",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "956:8:0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "966:2:0",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "952:3:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "952:17:0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "977:8:0"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "971:5:0"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "971:15:0"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "988:4:0"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "941:7:0"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "941:52:0"
                        },
                        "variableNames": [
                          {
                            "name": "space",
                            "nodeType": "YulIdentifier",
                            "src": "932:5:0"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 71,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "956:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 71,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "977:8:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 78,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "988:4:0",
                      "valueSize": 1
                    },
                    {
                      "declaration": 46,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "932:5:0",
                      "valueSize": 1
                    }
                  ],
                  "id": 86,
                  "nodeType": "InlineAssembly",
                  "src": "909:94:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 91,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1041:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 88,
                            "name": "space",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46,
                            "src": "1023:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 87,
                          "name": "IPawnSpace",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1144,
                          "src": "1012:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IPawnSpace_$1144_$",
                            "typeString": "type(contract IPawnSpace)"
                          }
                        },
                        "id": 89,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1012:17:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPawnSpace_$1144",
                          "typeString": "contract IPawnSpace"
                        }
                      },
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1100,
                      "src": "1012:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1012:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1012:35:0"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 94,
                        "name": "getSpace",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1057:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 96,
                      "indexExpression": {
                        "id": 95,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1066:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1057:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97,
                      "name": "space",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1075:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1057:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1057:23:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 103,
                        "name": "space",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1105:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 100,
                        "name": "allSpaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1090:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 102,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1090:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1090:21:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1090:21:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 107,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "1139:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 108,
                        "name": "space",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "1146:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 109,
                          "name": "allSpaces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "1153:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1153:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 106,
                      "name": "SpaceCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 957,
                      "src": "1126:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:44:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "EmitStatement",
                  "src": "1121:49:0"
                }
              ]
            },
            "functionSelector": "89cecd31",
            "id": 114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createSpace",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 44,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "601:8:0"
            },
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "577:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "576:15:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "space",
                  "nodeType": "VariableDeclaration",
                  "scope": 114,
                  "src": "619:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "618:15:0"
            },
            "scope": 153,
            "src": "556:621:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              998
            ],
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "1235:101:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 121,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1253:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1253:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 123,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1267:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1253:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a20464f5242494444454e",
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1280:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        },
                        "value": "PawnFactory: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        }
                      ],
                      "id": 120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1245:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1245:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1245:60:0"
                },
                {
                  "expression": {
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 128,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1315:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 129,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "1323:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1315:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:14:0"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 118,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1226:8:0"
            },
            "parameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 116,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "1201:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1201:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1200:16:0"
            },
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1235:0:0"
            },
            "scope": 153,
            "src": "1183:153:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              1003
            ],
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "1406:113:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 140,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1424:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1424:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 142,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1438:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1424:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061776e466163746f72793a20464f5242494444454e",
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1451:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        },
                        "value": "PawnFactory: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e467af432684fe31037ecf29d539b468a4dfe4b9fa9f45b65a356f635b54c42",
                          "typeString": "literal_string \"PawnFactory: FORBIDDEN\""
                        }
                      ],
                      "id": 139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1416:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:60:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 146,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:60:0"
                },
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 147,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1486:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 148,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "1500:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1486:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:26:0"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 137,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1397:8:0"
            },
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nodeType": "VariableDeclaration",
                  "scope": 152,
                  "src": "1366:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1365:22:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:0"
            },
            "scope": 153,
            "src": "1342:177:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 154,
        "src": "139:1382:0"
      }
    ],
    "src": "39:1483:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.5+commit.eb77ed08.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-01-18T00:16:14.007Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}